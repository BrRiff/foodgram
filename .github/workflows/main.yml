name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install required Python packages
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/requirements.txt

  docker_image_build_and_push:
    name: Build and push Docker images to Docker Hub
    runs-on: ubuntu-latest
    needs: run_tests

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          no-cache: true

      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
          no-cache: true

  remote_deployment:
    runs-on: ubuntu-latest
    needs: docker_image_build_and_push

    steps:
      - name: Prepare server environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram/
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
            sudo docker-compose down
            sudo docker-compose up -d

  notify_on_success:
    runs-on: ubuntu-latest
    needs: remote_deployment

    steps:
      - name: Send notification message via Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Приложение успешно развернуто в продакшн.
